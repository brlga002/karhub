{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Karhub",
    "description": "Karhub | Desafio Backend."
  },
  "servers": [
    {
      "description": "local",
      "url": "{{ API_URL }}"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy"
        ]
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Beer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "minTemperature": {
            "type": "number"
          },
          "maxTemperature": {
            "type": "number"
          },
          "averageTemperature": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "minTemperature",
          "maxTemperature",
          "averageTemperature",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy"
        ]
      },
      "NewBeer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "minTemperature": {
            "type": "number"
          },
          "maxTemperature": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "minTemperature",
          "maxTemperature"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create User",
        "security": [],
        "tags": [
          "Auth",
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "List Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "offset": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "total",
                    "offset",
                    "limit"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/authenticate/login": {
      "post": {
        "summary": "Authenticate User",
        "security": [],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "Usuario <b>gabriel@gmail.com</b> e senha <b>123456</b> v√°lidos no ambiente de teste. </br></br> Envie para receber um token.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "default": {
                  "email": "gabriel@gmail.com",
                  "password": "123456"
                },
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticate User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token",
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Get User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Update a User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/beers": {
      "post": {
        "summary": "Create Beer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Beer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBeer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Beer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Beers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Beer"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "List Beers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Beer"
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "offset": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "total",
                    "offset",
                    "limit"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/beers/{id}": {
      "delete": {
        "summary": "Delete Beer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Beer"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete Beer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Beer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Beer"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Get Beer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Beer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Beer"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Update a Beer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beer"
                }
              }
            }
          }
        }
      }
    },
    "/beers/beer-style": {
      "post": {
        "summary": "Get Beer style",
        "security": [],
        "tags": [
          "Beer and Playlist"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "temperature": {
                    "type": "number"
                  }
                },
                "required": [
                  "temperature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get Beer style",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "beerStyle": {
                      "type": "string",
                      "example": "IPA"
                    },
                    "playlist": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "IPARTY"
                        },
                        "tracks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Lua de Cristal"
                              },
                              "artist": {
                                "type": "string",
                                "example": "Xuxa"
                              },
                              "link": {
                                "type": "string",
                                "example": "https: //open.spotify.com/artist/21451j1KhjAiaYKflxBjr1"
                              }
                            },
                            "required": [
                              "name",
                              "artist",
                              "link"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "tracks"
                      ]
                    }
                  },
                  "required": [
                    "beerStyle",
                    "playlist"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}